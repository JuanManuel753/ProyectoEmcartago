@page "/formatodesolicituddepermiso/editar/{Id:int}"
@inject IRepositorioPermisos repositorio
@inject NavigationManager navigationManager
@inject IMostrarMensajes mostrarMensaje

<PageTitle>Editar Permiso De @Funcionarios.Nombre</PageTitle>  
<MudText Typo="Typo.h6" Style="display:flex; justify-content:center;">Solicitud De Permiso De @Funcionarios.Nombre</MudText>
@if (Funcionarios == null)
{
    <MudProgressLinear Color="Color.Info" Indeterminate="true" Class="my-7" />
}
else
{
    <FormularioFSDP OnValidSubmit="Editar" Funcionarios="Funcionarios"  />

}

@code {
    [Parameter] public int Id { get; set; }
    FormatoPermisos Funcionarios = new FormatoPermisos();

    protected async override Task OnInitializedAsync()
    {
        var httpResponse = await repositorio.Get<FormatoPermisos>($"api/fsdp/{Id}");

        if (httpResponse.Error)
        {
            if (httpResponse.HttpResponseMessage.StatusCode == System.Net.HttpStatusCode.NotFound)
            {
                navigationManager.NavigateTo("/indiceformatodesolicituddepermiso");
            }
            else
            {
                await mostrarMensaje.MostrarMensajeError(await httpResponse.GetBody());
            }
        }
        else
        {
            Funcionarios = httpResponse.Response;
        }
    }
    

    private async Task Editar()
    {
        var httpResponse = await repositorio.Put("api/fsdp", Funcionarios);
        if (httpResponse.Error)
        {
            await mostrarMensaje.MostrarMensajeError(await httpResponse.GetBody());
        }
        else
        {
            await mostrarMensaje.MostrarMensajeExitoso("Edicion De Formato De Permiso Exitoso");
            navigationManager.NavigateTo("/indiceformatodesolicituddepermiso");
        }
    }
}
